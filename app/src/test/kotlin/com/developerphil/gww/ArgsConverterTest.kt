/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.developerphil.gww

import assertk.assertThat
import assertk.assertions.isEqualTo
import com.developerphil.gww.TestData.unixFileSystem
import kotlin.test.Test

class ArgsConverterTest {


    @Test
    fun `Standard arguments are passed as is`() {
        "" parsesTo ""
        "tasks" parsesTo "tasks"
        "clean assemble" parsesTo "clean assemble"
        "app:assembleDebug" parsesTo ":app:assembleDebug"
        ":app:assembleDebug" parsesTo ":app:assembleDebug"
        ":app:clean :app:assembleDebug" parsesTo ":app:clean :app:assembleDebug"
        ":app:clean :app:assembleDebug --verbose -Dorg.debug.gradle=true" parsesTo ":app:clean :app:assembleDebug --verbose -Dorg.debug.gradle=true"
    }

    @Test
    fun `Can convert paths to project coordinates`() {
        "feature/login:assembleDebug" parsesTo ":feature:login:assembleDebug"
        "feature/login/test-support:assembleDebug" parsesTo ":feature:login:test-support:assembleDebug"
        "feature/login/test-support:assembleDebug -Dorg.gradle.debug=true" parsesTo ":feature:login:test-support:assembleDebug -Dorg.gradle.debug=true"
    }

    @Test
    fun `Don't perform replacements if paths are between double-quotes`() {
        "\"hello/\"" parsesTo "\"hello/\""
        "\"hello/world\"" parsesTo "\"hello/world\""
    }

    @Test
    fun `Join paths and task names when multiple tasks are provided for the same path`() {
        "feature/login:clean//assembleDebug" parsesTo ":feature:login:clean :feature:login:assembleDebug"
        "feature/login:clean//assembleDebug//test" parsesTo ":feature:login:clean :feature:login:assembleDebug :feature:login:test"
        "assembleDebug//test" parsesTo "assembleDebug test"
    }

    @Test
    fun `Parameters with slashes aren't parsed as project coordinates`() {
        "-PgitBranch=origin/develop" parsesTo "-PgitBranch=origin/develop"
        "clean assemble -PgitBranch=origin/develop" parsesTo "clean assemble -PgitBranch=origin/develop"
        "app:assembleDebug -PgitBranch=origin/develop" parsesTo ":app:assembleDebug -PgitBranch=origin/develop"
        ":app:assembleDebug -PgitBranch=origin/develop" parsesTo ":app:assembleDebug -PgitBranch=origin/develop"
        "feature/login:assembleDebug -PgitBranch=origin/develop" parsesTo ":feature:login:assembleDebug -PgitBranch=origin/develop"
        "feature/login/test-support:assembleDebug -PgitBranch=origin/develop" parsesTo ":feature:login:test-support:assembleDebug -PgitBranch=origin/develop"
        "feature/login/test-support:assembleDebug -Dorg.gradle.debug=true -PgitBranch=origin/develop" parsesTo ":feature:login:test-support:assembleDebug -Dorg.gradle.debug=true -PgitBranch=origin/develop"
    }

    private infix fun String.parsesTo(expected: String) {
        val argsArray = this.split(" ").toTypedArray()
        assertThat(argsArray.parseArguments(unixFileSystem())).isEqualTo(expected)
    }
}

